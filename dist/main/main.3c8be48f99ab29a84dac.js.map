{"version":3,"file":"main/main.3c8be48f99ab29a84dac.js","mappings":"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","sources":["webpack://srsly/./src/js/modules/helpers.js","webpack://srsly/./src/js/modules/dropdown.js","webpack://srsly/./src/js/modules/overlay-menu.js","webpack://srsly/./src/js/main.js","webpack://srsly/./src/js/modules/pdf-links.js","webpack://srsly/./src/js/modules/preload.js","webpack://srsly/./src/js/modules/animate.js","webpack://srsly/./src/js/modules/video-autoplay.js","webpack://srsly/./src/js/modules/accordion.js","webpack://srsly/./src/js/modules/tabs.js","webpack://srsly/./src/js/modules/popup.js","webpack://srsly/./src/js/modules/section-scroll.js"],"sourcesContent":["export function isTouchDevice() {\r\n  return window.matchMedia(\"(pointer: coarse)\").matches;\r\n}\r\n\r\nexport function isOverlayMenu() {\r\n  const overlayMenuBreakpoint = parseInt(window.getComputedStyle(document.documentElement).getPropertyValue(\"--overlay-menu-breakpoint\")) || false;\r\n  return typeof overlayMenuBreakpoint === \"number\" ? window.innerWidth < overlayMenuBreakpoint : true;\r\n}\r\n\r\nexport const activeClass = \"active\";\r\n\r\nexport const visibleClass = \"element-visible\";\r\n\r\nexport function toggleVisibility(element) {\r\n  element.classList.toggle(visibleClass);\r\n}\r\n","import { isOverlayMenu } from \"./overlay-menu\";\r\nimport { isTouchDevice, activeClass } from \"./helpers\";\r\n\r\nfunction getActiveDropdowns() {\r\n  return document.querySelectorAll(\"[data-dropdown].\" + activeClass);\r\n}\r\n\r\nfunction dropdownToggleActiveState(dropdown) {\r\n  dropdown.classList.toggle(activeClass);\r\n}\r\n\r\nexport function overlayMenuDropdownsRemoveActiveState() {\r\n  getActiveDropdowns().forEach((activeDropdown) => {\r\n    if (isOverlayMenuDropdown(activeDropdown)) {\r\n      dropdownToggleActiveState(activeDropdown);\r\n    }\r\n  });\r\n}\r\n\r\nfunction isOverlayMenuDropdown(dropdown) {\r\n  return isOverlayMenu() && dropdown.getAttribute(\"data-dropdown-location\") === \"overlay-menu\";\r\n}\r\n\r\nexport function dropdown() {\r\n  const dropdowns = document.querySelectorAll(\"[data-dropdown]\");\r\n  dropdowns.forEach((dropdown) => {\r\n    const dropdownToggler = dropdown.querySelector(\"[data-dropdown-toggler]\");\r\n    const dropdownTogglerBack = dropdown.querySelector(\"[data-dropdown-toggler-back]\");\r\n    const dropdownTogglers = [dropdownToggler, dropdownTogglerBack];\r\n    dropdownTogglers.forEach((dropdownToggler) => {\r\n      dropdownToggler?.addEventListener(\"click\", (e) => {\r\n        if (isTouchDevice() || isOverlayMenuDropdown(dropdown)) {\r\n          e.preventDefault();\r\n          dropdownToggleActiveState(dropdown);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  //Document Click\r\n  document.addEventListener(\"click\", (e) => {\r\n    getActiveDropdowns().forEach((activeDropdown) => {\r\n      if (!isOverlayMenuDropdown(activeDropdown) && !activeDropdown.contains(e.target)) {\r\n        dropdownToggleActiveState(activeDropdown);\r\n      }\r\n    });\r\n  });\r\n\r\n  //Escape Click\r\n  document.addEventListener(\"keydown\", (e) => {\r\n    if (e.key == \"Escape\") {\r\n      getActiveDropdowns().forEach((activeDropdown) => {\r\n        dropdownToggleActiveState(activeDropdown);\r\n      });\r\n    }\r\n  });\r\n}\r\n","import { overlayMenuDropdownsRemoveActiveState } from \"./dropdown\";\r\nimport { activeClass } from \"./helpers\";\r\nexport function isOverlayMenu() {\r\n\tconst overlayMenuBreakpoint =\r\n\t\tparseInt(window.getComputedStyle(document.documentElement).getPropertyValue(\"--overlay-menu-breakpoint\")) ||\r\n\t\tfalse;\r\n\treturn typeof overlayMenuBreakpoint === \"number\" ? window.innerWidth < overlayMenuBreakpoint : true;\r\n}\r\n\r\nexport function overlayMenu() {\r\n\tconst overlayMenu = document.querySelector(\"[data-overlay-menu]\");\r\n\tif (!overlayMenu) return;\r\n\tconst overlayMenuBody = document.querySelector(\"[data-overlay-menu-body]\");\r\n\tconst overlayMenuTogglers = document.querySelectorAll(\"[data-overlay-menu-toggler]\");\r\n\tconst overlayMenuCustomLinks = overlayMenu.querySelectorAll(\".menu-item-type-custom:not(.main-menu__dropdown) > a\");\r\n\r\n\tconst changingClass = \"changing\";\r\n\r\n\tconst isOverlayMenuActive = () => {\r\n\t\treturn isOverlayMenu() && overlayMenu.classList.contains(activeClass);\r\n\t};\r\n\r\n\tconst overlayMenuToggleActiveState = () => {\r\n\t\toverlayMenu.classList.toggle(activeClass);\r\n\t\toverlayMenu.classList.add(changingClass);\r\n\t\toverlayMenu.addEventListener(\"transitionend\", () => {\r\n\t\t\toverlayMenu.classList.remove(changingClass);\r\n\t\t});\r\n\t\tif (!isOverlayMenuActive()) {\r\n\t\t\toverlayMenuDropdownsRemoveActiveState();\r\n\t\t}\r\n\t};\r\n\r\n\t// Force scroll up when vertical scrollbar exists in overlay menu\r\n\tconst mainMenus = document.querySelectorAll(\"[data-main-menu]\");\r\n\tmainMenus.forEach((mainMenu) => {\r\n\t\tconst dropdownTogglers = mainMenu?.querySelectorAll(\"[data-dropdown-toggler]\");\r\n\t\tdropdownTogglers.forEach((dropdownToggler) => {\r\n\t\t\tdropdownToggler.addEventListener(\"click\", () => {\r\n\t\t\t\tif (isOverlayMenu()) {\r\n\t\t\t\t\tconst currentDropdownMenu = dropdownToggler.closest(\"[data-dropdown-menu]\");\r\n\t\t\t\t\tconst childDropdownMenu = dropdownToggler\r\n\t\t\t\t\t\t.closest(\"[data-dropdown]\")\r\n\t\t\t\t\t\t.querySelector(\"[data-dropdown-menu]\");\r\n\t\t\t\t\tconst scrollTopElements = [overlayMenuBody, childDropdownMenu, currentDropdownMenu];\r\n\t\t\t\t\tscrollTopElements.forEach((scrollTopElement) => {\r\n\t\t\t\t\t\tscrollTopElement?.scrollTo(0, 0);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n\r\n\t//Toggler Click\r\n\toverlayMenuTogglers.forEach((toggler) => {\r\n\t\ttoggler.addEventListener(\"click\", (e) => {\r\n\t\t\toverlayMenuToggleActiveState();\r\n\t\t});\r\n\t});\r\n\r\n\t//Custom Link Click\r\n\toverlayMenuCustomLinks.forEach((link) =>\r\n\t\tlink.addEventListener(\"click\", (e) => {\r\n\t\t\tconst target = document.getElementById(e.target.hash?.substring(1));\r\n\t\t\tif (isOverlayMenuActive() && target) overlayMenuToggleActiveState();\r\n\t\t})\r\n\t);\r\n\r\n\t//Escape Click\r\n\tdocument.addEventListener(\"keydown\", (e) => {\r\n\t\tif (e.key == \"Escape\" && isOverlayMenuActive()) {\r\n\t\t\toverlayMenuToggleActiveState();\r\n\t\t}\r\n\t});\r\n}\r\n","import \"../scss/style.scss\";\r\n\r\nimport { accordion } from \"./modules/accordion\";\r\nimport { tabs } from \"./modules/tabs\";\r\nimport { overlayMenu } from \"./modules/overlay-menu\";\r\nimport { animate } from \"./modules/animate\";\r\nimport { videoAutoplay } from \"./modules/video-autoplay\";\r\nimport { preload } from \"./modules/preload\";\r\nimport { pdfLinks } from \"./modules/pdf-links\";\r\nimport { dropdown } from \"./modules/dropdown\";\r\nimport { popup } from \"./modules/popup\";\r\nimport { sectionScroll } from \"./modules/section-scroll\";\r\n\r\noverlayMenu();\r\n\r\ndropdown();\r\n\r\npdfLinks();\r\n\r\npreload();\r\n\r\nanimate();\r\n\r\nvideoAutoplay();\r\n\r\naccordion();\r\n\r\ntabs();\r\n\r\npopup();\r\n\r\nsectionScroll();\r\n\r\nconst allTextOffsets = document.querySelectorAll(\".text-offset\");\r\n\r\nallTextOffsets.forEach((textOffset) => {\r\n\tconst parent = textOffset.parentNode;\r\n\r\n\tconst firstPart = document.createElement(\"span\");\r\n\tfirstPart.classList.add(\"text-offset-first-part\");\r\n\r\n\twhile (parent.firstChild && parent.firstChild !== textOffset) {\r\n\t\tfirstPart.appendChild(parent.firstChild);\r\n\t}\r\n\r\n\tparent.insertBefore(firstPart, textOffset);\r\n\r\n\tfunction wrapTextInSpan(el) {\r\n\t\tconst text = el.textContent;\r\n\t\tel.textContent = \"\";\r\n\t\tconst newSpan = document.createElement(\"span\");\r\n\t\tnewSpan.classList.add(\"text-offset-content\");\r\n\t\tnewSpan.textContent = text;\r\n\t\tel.appendChild(newSpan);\r\n\t}\r\n\r\n\twrapTextInSpan(firstPart);\r\n\twrapTextInSpan(textOffset);\r\n\r\n\tparent.classList.add(\"text-offset-active\");\r\n});\r\n","export function pdfLinks() {\r\n  const pdfLinks = document.querySelectorAll('a[href$=\".pdf\"]');\r\n  if (pdfLinks.length) {\r\n    pdfLinks.forEach((link) => {\r\n      link.setAttribute(\"target\", \"_blank\");\r\n      link.setAttribute(\"rel\", \"noopener noreferrer\");\r\n    });\r\n  }\r\n}\r\n","export function preload() {\r\n  if (document.readyState === \"interactive\") {\r\n    document.body.classList.remove(\"preload\");\r\n  }\r\n}\r\n","export function animate() {\n\tconst els = document.querySelectorAll(\"[data-animate]\");\n\t// const titles = Array.from(document.querySelectorAll(\"*\")).filter((el) => el.querySelector(\":scope > .text-offset\"));\n\tconst titles = document.querySelectorAll(\":has(> .text-offset)\");\n\n\tconst observer = new IntersectionObserver(\n\t\t(entries) => {\n\t\t\tentries.forEach((entry) => {\n\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\tentry.target.classList.add(\"animate-show\");\n\t\t\t\t\tobserver.unobserve(entry.target);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t{\n\t\t\trootMargin: \"-100px\",\n\t\t}\n\t);\n\tels.forEach((el) => {\n\t\tobserver.observe(el);\n\t});\n\ttitles.forEach((el) => {\n\t\tobserver.observe(el);\n\t});\n}\n","//Play background video on client side\r\nexport function videoAutoplay() {\r\n  const videoSources = document.querySelectorAll(\"source\");\r\n  if (videoSources.length) {\r\n    videoSources.forEach((source) => {\r\n      const dataSrc = source.dataset.src;\r\n      if (dataSrc) {\r\n        source.src = source.dataset.src;\r\n        source.parentElement.load();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { toggleVisibility, activeClass } from \"./helpers\";\r\n\r\nexport function accordion() {\r\n  const accordionHandler = (accordion) => {\r\n    const accordionAriaControls = accordion.getAttribute(\"aria-controls\");\r\n    const accordionItem = accordion.closest(\"[data-accordion-item]\");\r\n    toggleVisibility(document.getElementById(accordionAriaControls));\r\n    accordionItem.classList.toggle(activeClass);\r\n\r\n    accordion.setAttribute(\"aria-expanded\", accordion.getAttribute(\"aria-expanded\") === \"false\" ? \"true\" : \"false\");\r\n  };\r\n\r\n  const accordionTogglers = document.querySelectorAll(\"[data-accordion-toggler]\");\r\n  accordionTogglers.forEach((accordionToggler) => {\r\n    accordionToggler.addEventListener(\"click\", () => {\r\n      accordionHandler(accordionToggler);\r\n    });\r\n  });\r\n}\r\n","import { toggleVisibility, visibleClass, activeClass } from \"./helpers\";\r\n\r\nexport function tabs() {\r\n  function tabHandler(tab) {\r\n    // Do nothing if the current tab has the .active class\r\n    if (tab.classList.contains(activeClass)) {\r\n      return;\r\n    }\r\n\r\n    const tabsParent = tab.closest(\"[data-tabs]\");\r\n\r\n    // Remove active item\r\n    const activeTab = tabsParent.querySelector(\"[data-tab].\" + activeClass);\r\n    activeTab.classList.remove(activeClass);\r\n    activeTab.setAttribute(\"aria-selected\", \"false\");\r\n\r\n    // Add active item\r\n    tab.classList.add(activeClass);\r\n    tab.setAttribute(\"aria-selected\", \"true\");\r\n\r\n    // Toggle tab panels visibility\r\n    const visibleTabPanel = tabsParent.querySelector(`.${visibleClass}`);\r\n    toggleVisibility(visibleTabPanel);\r\n    const targetTabPanel = document.getElementById(tab.getAttribute(\"aria-controls\"));\r\n    toggleVisibility(targetTabPanel);\r\n\r\n    // Scroll to tab on mobile within the scrollbar\r\n    const tabList = tabsParent.querySelector(\"[data-tablist]\");\r\n    const tabListStyles = window.getComputedStyle(tabList);\r\n    const tabListStylesLeftOffset = parseInt(tabListStyles.paddingLeft);\r\n    const scrollLeft = tab.getBoundingClientRect().left - tabListStylesLeftOffset;\r\n    tabList.scrollLeft += scrollLeft;\r\n  }\r\n\r\n  const tabs = document.querySelectorAll(\"[data-tab]\");\r\n  tabs.forEach((tab) => {\r\n    tab.addEventListener(\"click\", function () {\r\n      tabHandler(tab);\r\n    });\r\n  });\r\n}\r\n","export function popup() {\r\n  const popupSelector = \"[data-sgd-popup]\";\r\n\r\n  class MainPopup {\r\n    static popupOpenedBy = undefined;\r\n    constructor(popup) {\r\n      this.popup = popup;\r\n      this.togglerOpenSelectors = this.popup.dataset.sgdPopupTriggerSelector;\r\n      this.togglersOpen = this.togglerOpenSelectors && this.isValidSelector(this.togglerOpenSelectors) ? document.querySelectorAll(this.togglerOpenSelectors) : [];\r\n      this.togglersClose = this.popup.querySelectorAll(\"[data-sgd-popup-toggler-close]\");\r\n      this.focusableElements = this.getFocusableElements();\r\n      this.firstFocusableElement = this.focusableElements[0];\r\n      this.lastFocusableElement = this.focusableElements[this.focusableElements.length - 1];\r\n      this.activeClass = \"active\";\r\n\r\n      const windowLocationHash = window.location.hash;\r\n      if (windowLocationHash) {\r\n        this.togglersOpen.forEach((toggler) => {\r\n          const togglerHash = toggler.hash;\r\n          if (togglerHash && togglerHash === windowLocationHash) {\r\n            this.popupShow();\r\n          }\r\n        });\r\n      }\r\n\r\n      this.togglersOpen?.forEach((togglerOpen) => {\r\n        togglerOpen.addEventListener(\"click\", (e) => {\r\n          e.preventDefault();\r\n          this.popupShow();\r\n\r\n          //define popupOpenedBy if togglerOpen is not inside popup\r\n          if (!togglerOpen.closest(popupSelector)) {\r\n            MainPopup.popupOpenedBy = togglerOpen;\r\n          }\r\n        });\r\n      });\r\n\r\n      this.togglersClose?.forEach((togglerClose) => {\r\n        togglerClose.addEventListener(\"click\", (e) => {\r\n          e.preventDefault();\r\n          this.popupClose();\r\n        });\r\n      });\r\n\r\n      document.addEventListener(\"keydown\", (e) => {\r\n        if (e.code === \"Escape\") {\r\n          this.popupClose();\r\n        }\r\n      });\r\n    }\r\n\r\n    isValidSelector(selector) {\r\n      try {\r\n        document.querySelectorAll(selector);\r\n      } catch (e) {\r\n        if (e instanceof DOMException) {\r\n          console.error(\"Not valid popup trigger selector: \" + selector);\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    isActive(popup = this.popup) {\r\n      return popup.classList.contains(this.activeClass);\r\n    }\r\n\r\n    focusTrap(parent = this.popup) {\r\n      parent.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Tab\" || event.keyCode === 9) {\r\n          if (event.shiftKey) {\r\n            // if shift key pressed for shift + tab combination\r\n            if (document.activeElement === this.firstFocusableElement) {\r\n              event.preventDefault();\r\n              this.lastFocusableElement.focus();\r\n            }\r\n          } else {\r\n            // if tab key is pressed\r\n            if (document.activeElement === this.lastFocusableElement) {\r\n              event.preventDefault();\r\n              this.firstFocusableElement.focus();\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    getFocusableElements(parent = this.popup) {\r\n      return Array.from(parent.querySelectorAll('a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])')).filter(\r\n        (el) => !el.hasAttribute(\"disabled\") && !el.getAttribute(\"aria-hidden\") && el.type !== \"hidden\"\r\n      );\r\n    }\r\n\r\n    popupShow(popup = this.popup) {\r\n      const activePopups = document.querySelectorAll(`${popupSelector}.${this.activeClass}`);\r\n      activePopups?.forEach((activePopup) => {\r\n        if (activePopup !== this.popup) {\r\n          this.popupClose(activePopup);\r\n        }\r\n      });\r\n\r\n      popup.classList.add(this.activeClass);\r\n      popup.addEventListener(\"transitionend\", (event) => {\r\n        if (event.target === popup && this.isActive()) {\r\n          this.firstFocusableElement.focus({\r\n            preventScroll: true,\r\n          });\r\n        }\r\n      });\r\n      this.focusTrap();\r\n    }\r\n\r\n    popupClose(popup = this.popup) {\r\n      if (!this.isActive(popup)) return;\r\n      popup.classList.remove(this.activeClass);\r\n      MainPopup.popupOpenedBy?.focus({\r\n        preventScroll: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  const popups = document.querySelectorAll(popupSelector);\r\n  popups.forEach((popup) => {\r\n    new MainPopup(popup);\r\n  });\r\n}\r\n","export function sectionScroll() {\r\n\t// Get all navigation links\r\n\tconst scrollIdSelector = \"data-section-scroll-section\";\r\n\tconst scrollTriggers = document.querySelectorAll(\"[data-section-scroll-trigger]\");\r\n\r\n\tif (!scrollTriggers.length) return;\r\n\t// Smooth scroll on link click + set active class on click\r\n\tscrollTriggers.forEach((trigger) => {\r\n\t\ttrigger.addEventListener(\"click\", (event) => {\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\t// Remove active class from all links and add active class to the clicked link\r\n\t\t\tscrollTriggers.forEach((s) => s.classList.remove(\"active\"));\r\n\t\t\ttrigger.classList.add(\"active\");\r\n\r\n\t\t\t// Smooth scroll to the corresponding section\r\n\t\t\tconst targetId = trigger.getAttribute(\"href\").substring(1);\r\n\t\t\tconst targetElement = document.getElementById(targetId);\r\n\t\t\tif (targetElement) {\r\n\t\t\t\ttargetElement.scrollIntoView({ behavior: \"smooth\" });\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\t// Intersection Observer to add 'active' class based on visible section\r\n\tconst options = {\r\n\t\troot: null,\r\n\t\trootMargin: \"-50% 0px\",\r\n\t\tthreshold: 0,\r\n\t};\r\n\r\n\tconst observer = new IntersectionObserver((entries) => {\r\n\t\tentries.forEach((entry) => {\r\n\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\tconst visibleSectionId = entry.target.getAttribute(\"id\");\r\n\t\t\t\tscrollTriggers.forEach((link) => {\r\n\t\t\t\t\tlink.classList.toggle(\"active\", link.getAttribute(\"href\").substring(1) === visibleSectionId);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}, options);\r\n\r\n\t// Observe all elements with data-section-scroll-section\r\n\tconst sections = document.querySelectorAll(`[${scrollIdSelector}]`);\r\n\tsections.forEach((section) => observer.observe(section));\r\n}\r\n"],"names":["activeClass","visibleClass","toggleVisibility","element","classList","toggle","getActiveDropdowns","document","querySelectorAll","dropdownToggleActiveState","dropdown","isOverlayMenuDropdown","getAttribute","overlayMenuBreakpoint","parseInt","window","getComputedStyle","documentElement","getPropertyValue","innerWidth","overlayMenu","querySelector","overlayMenuBody","overlayMenuTogglers","overlayMenuCustomLinks","changingClass","isOverlayMenuActive","contains","overlayMenuToggleActiveState","add","addEventListener","remove","forEach","activeDropdown","mainMenu","dropdownTogglers","dropdownToggler","currentDropdownMenu","closest","childDropdownMenu","scrollTopElement","scrollTo","toggler","e","link","target","getElementById","hash","substring","key","matchMedia","matches","preventDefault","pdfLinks","length","setAttribute","readyState","body","els","titles","observer","IntersectionObserver","entries","entry","isIntersecting","unobserve","rootMargin","el","observe","animate","videoSources","source","dataset","src","parentElement","load","videoAutoplay","accordionToggler","accordion","accordionAriaControls","accordionItem","accordionHandler","tab","tabsParent","activeTab","tabList","tabListStyles","tabListStylesLeftOffset","paddingLeft","scrollLeft","getBoundingClientRect","left","tabHandler","popupSelector","MainPopup","static","undefined","constructor","popup","this","togglerOpenSelectors","sgdPopupTriggerSelector","togglersOpen","isValidSelector","togglersClose","focusableElements","getFocusableElements","firstFocusableElement","lastFocusableElement","windowLocationHash","location","togglerHash","popupShow","togglerOpen","popupOpenedBy","togglerClose","popupClose","code","selector","DOMException","console","error","isActive","focusTrap","parent","event","keyCode","shiftKey","activeElement","focus","Array","from","filter","hasAttribute","type","activePopups","activePopup","preventScroll","scrollTriggers","trigger","s","targetId","targetElement","scrollIntoView","behavior","visibleSectionId","root","threshold","section","sectionScroll","textOffset","parentNode","firstPart","createElement","firstChild","appendChild","wrapTextInSpan","text","textContent","newSpan","insertBefore"],"sourceRoot":""}