.align-items {
	&-center {
		align-items: center;
	}
	&-end {
		align-items: flex-end;
	}
}

.align-self {
	&-center {
		align-self: center;
	}
	&-start {
		align-self: start;
	}
}

.justify-content {
	&-center {
		justify-content: center;
	}
	&-between {
		justify-content: space-between;
	}
	&-end {
		justify-content: flex-end;
	}
	&-md {
		@include bp(md, min) {
			&-center {
				justify-content: center;
			}
			&-between {
				justify-content: space-between;
			}
			&-end {
				justify-content: flex-end;
			}
		}
	}
}

.flex {
	&-column-reverse {
		flex-direction: column-reverse;
	}
	&-md-row {
		@include bp(md) {
			flex-direction: row;
		}
	}
}

.stretch {
	@include stretch;
}

.pos {
	&-rel {
		position: relative;
	}
	&-fixed {
		position: fixed;
	}
}

.overflow {
	&-hidden {
		overflow: hidden;
	}
}

.element {
	&-hidden {
		@include element-hidden;
	}
	&-visible {
		@include element-visible;
	}
}

.screen-reader-text {
	@include screen-reader-text;
}

.vstack {
	@include vstack;
}

.hstack {
	@include hstack;
}

.preload * {
	transition: none !important;
}

.trim-margin {
	@include trim-margin;
}

.z-negative-1 {
	z-index: -1;
}

.pos-sticky {
	position: sticky;
	top: 0;
	&-md {
		@extend .pos-sticky;
		@include bp(md, max) {
			position: relative;
		}
	}
}

.rounded-image {
	width: var(--icon-size-lg);
	height: var(--icon-size-lg);
	border-radius: 100%;
}

.uppercase {
	text-transform: uppercase;
}

.element {
	&-sticky {
		position: sticky;
		top: 0;
		height: 100%;
		width: 100%;
		max-height: 100vh;
		&:is([sizes="auto" i], [sizes^="auto," i]) {
			contain-intrinsic-size: none;
		}
	}
}

.ff-primary {
	font-family: var(--ff-primary);
}

[data-lax-bg-img] {
	height: calc(100% + 400px);
}

.border-block {
	border-block: var(--viewport-border-width) solid var(--color-primary);
}
