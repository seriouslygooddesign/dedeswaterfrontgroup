{"version":3,"file":"main/main.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;ACA0D;AAC1D;AACO;AACP;AACA;AACA;AACA,IAAI,0DAAgB;AACpB,mCAAmC,iDAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;;;;;;;;;;;;;AClBO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;;;;;;;;;;;;;;;;;;ACxB+C;AACQ;AACvD;AACA;AACA,wDAAwD,iDAAW;AACnE;AACA;AACA;AACA,4BAA4B,iDAAW;AACvC;AACA;AACO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,SAAS,4DAAa;AACtB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAa;AACzB;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;ACxDO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACO;AACP;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;ACfmE;AAC3B;AACjC;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,iDAAW;AACtE;AACA;AACA;AACA,+BAA+B,iDAAW;AAC1C;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG,gFAAqC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,IAAI;AACJ,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;;;;;;;;;;;;;;AC1EO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACRO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,cAAc,GAAG,iBAAiB;AAC1F;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;AC7HO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;ACJO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA,gDAAgD,iBAAiB;AACjE;AACA;;;;;;;;;;;;;;;;AC7CwE;AACxE;AACO;AACP;AACA;AACA,+BAA+B,iDAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,iDAAW;AAC1E,+BAA+B,iDAAW;AAC1C;AACA;AACA;AACA,sBAAsB,iDAAW;AACjC;AACA;AACA;AACA,yDAAyD,kDAAY,CAAC;AACtE,IAAI,0DAAgB;AACpB;AACA,IAAI,0DAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;;;;;;;;;;;;;ACxCA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;UCZA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;ACN4B;AAC5B;AACgD;AACV;AACe;AACT;AACa;AACb;AACG;AACD;AACN;AACiB;AACzD;AACA,kEAAW;AACX;AACA,2DAAQ;AACR;AACA,4DAAQ;AACR;AACA,yDAAO;AACP;AACA,yDAAO;AACP;AACA,sEAAa;AACb;AACA,6DAAS;AACT;AACA,mDAAI;AACJ;AACA,qDAAK;AACL;AACA,uEAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://srsly/./src/scss/style.scss?2c55","webpack://srsly/./src/js/modules/accordion.js","webpack://srsly/./src/js/modules/animate.js","webpack://srsly/./src/js/modules/dropdown.js","webpack://srsly/./src/js/modules/helpers.js","webpack://srsly/./src/js/modules/overlay-menu.js","webpack://srsly/./src/js/modules/pdf-links.js","webpack://srsly/./src/js/modules/popup.js","webpack://srsly/./src/js/modules/preload.js","webpack://srsly/./src/js/modules/section-scroll.js","webpack://srsly/./src/js/modules/tabs.js","webpack://srsly/./src/js/modules/video-autoplay.js","webpack://srsly/webpack/bootstrap","webpack://srsly/webpack/runtime/define property getters","webpack://srsly/webpack/runtime/hasOwnProperty shorthand","webpack://srsly/webpack/runtime/make namespace object","webpack://srsly/./src/js/main.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import { toggleVisibility, activeClass } from \"./helpers\";\r\n\r\nexport function accordion() {\r\n  const accordionHandler = (accordion) => {\r\n    const accordionAriaControls = accordion.getAttribute(\"aria-controls\");\r\n    const accordionItem = accordion.closest(\"[data-accordion-item]\");\r\n    toggleVisibility(document.getElementById(accordionAriaControls));\r\n    accordionItem.classList.toggle(activeClass);\r\n\r\n    accordion.setAttribute(\"aria-expanded\", accordion.getAttribute(\"aria-expanded\") === \"false\" ? \"true\" : \"false\");\r\n  };\r\n\r\n  const accordionTogglers = document.querySelectorAll(\"[data-accordion-toggler]\");\r\n  accordionTogglers.forEach((accordionToggler) => {\r\n    accordionToggler.addEventListener(\"click\", () => {\r\n      accordionHandler(accordionToggler);\r\n    });\r\n  });\r\n}\r\n","export function animate() {\n\tconst els = document.querySelectorAll(\"[data-animate]\");\n\t// const titles = Array.from(document.querySelectorAll(\"*\")).filter((el) => el.querySelector(\":scope > .text-offset\"));\n\tconst titles = document.querySelectorAll(\":has(> .text-offset)\");\n\n\tconst observer = new IntersectionObserver(\n\t\t(entries) => {\n\t\t\tentries.forEach((entry) => {\n\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\tentry.target.classList.add(\"animate-show\");\n\t\t\t\t\tobserver.unobserve(entry.target);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t{\n\t\t\trootMargin: \"-100px\",\n\t\t}\n\t);\n\tels.forEach((el) => {\n\t\tobserver.observe(el);\n\t});\n\ttitles.forEach((el) => {\n\t\tobserver.observe(el);\n\t});\n}\n","import { isOverlayMenu } from \"./overlay-menu\";\r\nimport { isTouchDevice, activeClass } from \"./helpers\";\r\n\r\nfunction getActiveDropdowns() {\r\n  return document.querySelectorAll(\"[data-dropdown].\" + activeClass);\r\n}\r\n\r\nfunction dropdownToggleActiveState(dropdown) {\r\n  dropdown.classList.toggle(activeClass);\r\n}\r\n\r\nexport function overlayMenuDropdownsRemoveActiveState() {\r\n  getActiveDropdowns().forEach((activeDropdown) => {\r\n    if (isOverlayMenuDropdown(activeDropdown)) {\r\n      dropdownToggleActiveState(activeDropdown);\r\n    }\r\n  });\r\n}\r\n\r\nfunction isOverlayMenuDropdown(dropdown) {\r\n  return isOverlayMenu() && dropdown.getAttribute(\"data-dropdown-location\") === \"overlay-menu\";\r\n}\r\n\r\nexport function dropdown() {\r\n  const dropdowns = document.querySelectorAll(\"[data-dropdown]\");\r\n  dropdowns.forEach((dropdown) => {\r\n    const dropdownToggler = dropdown.querySelector(\"[data-dropdown-toggler]\");\r\n    const dropdownTogglerBack = dropdown.querySelector(\"[data-dropdown-toggler-back]\");\r\n    const dropdownTogglers = [dropdownToggler, dropdownTogglerBack];\r\n    dropdownTogglers.forEach((dropdownToggler) => {\r\n      dropdownToggler?.addEventListener(\"click\", (e) => {\r\n        if (isTouchDevice() || isOverlayMenuDropdown(dropdown)) {\r\n          e.preventDefault();\r\n          dropdownToggleActiveState(dropdown);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  //Document Click\r\n  document.addEventListener(\"click\", (e) => {\r\n    getActiveDropdowns().forEach((activeDropdown) => {\r\n      if (!isOverlayMenuDropdown(activeDropdown) && !activeDropdown.contains(e.target)) {\r\n        dropdownToggleActiveState(activeDropdown);\r\n      }\r\n    });\r\n  });\r\n\r\n  //Escape Click\r\n  document.addEventListener(\"keydown\", (e) => {\r\n    if (e.key == \"Escape\") {\r\n      getActiveDropdowns().forEach((activeDropdown) => {\r\n        dropdownToggleActiveState(activeDropdown);\r\n      });\r\n    }\r\n  });\r\n}\r\n","export function isTouchDevice() {\r\n  return window.matchMedia(\"(pointer: coarse)\").matches;\r\n}\r\n\r\nexport function isOverlayMenu() {\r\n  const overlayMenuBreakpoint = parseInt(window.getComputedStyle(document.documentElement).getPropertyValue(\"--overlay-menu-breakpoint\")) || false;\r\n  return typeof overlayMenuBreakpoint === \"number\" ? window.innerWidth < overlayMenuBreakpoint : true;\r\n}\r\n\r\nexport const activeClass = \"active\";\r\n\r\nexport const visibleClass = \"element-visible\";\r\n\r\nexport function toggleVisibility(element) {\r\n  element.classList.toggle(visibleClass);\r\n}\r\n","import { overlayMenuDropdownsRemoveActiveState } from \"./dropdown\";\r\nimport { activeClass } from \"./helpers\";\r\nexport function isOverlayMenu() {\r\n\tconst overlayMenuBreakpoint =\r\n\t\tparseInt(window.getComputedStyle(document.documentElement).getPropertyValue(\"--overlay-menu-breakpoint\")) ||\r\n\t\tfalse;\r\n\treturn typeof overlayMenuBreakpoint === \"number\" ? window.innerWidth < overlayMenuBreakpoint : true;\r\n}\r\n\r\nexport function overlayMenu() {\r\n\tconst overlayMenu = document.querySelector(\"[data-overlay-menu]\");\r\n\tif (!overlayMenu) return;\r\n\tconst overlayMenuBody = document.querySelector(\"[data-overlay-menu-body]\");\r\n\tconst overlayMenuTogglers = document.querySelectorAll(\"[data-overlay-menu-toggler]\");\r\n\tconst overlayMenuCustomLinks = overlayMenu.querySelectorAll(\".menu-item-type-custom:not(.main-menu__dropdown) > a\");\r\n\r\n\tconst changingClass = \"changing\";\r\n\r\n\tconst isOverlayMenuActive = () => {\r\n\t\treturn isOverlayMenu() && overlayMenu.classList.contains(activeClass);\r\n\t};\r\n\r\n\tconst overlayMenuToggleActiveState = () => {\r\n\t\toverlayMenu.classList.toggle(activeClass);\r\n\t\toverlayMenu.classList.add(changingClass);\r\n\t\toverlayMenu.addEventListener(\"transitionend\", () => {\r\n\t\t\toverlayMenu.classList.remove(changingClass);\r\n\t\t});\r\n\t\tif (!isOverlayMenuActive()) {\r\n\t\t\toverlayMenuDropdownsRemoveActiveState();\r\n\t\t}\r\n\t};\r\n\r\n\t// Force scroll up when vertical scrollbar exists in overlay menu\r\n\tconst mainMenus = document.querySelectorAll(\"[data-main-menu]\");\r\n\tmainMenus.forEach((mainMenu) => {\r\n\t\tconst dropdownTogglers = mainMenu?.querySelectorAll(\"[data-dropdown-toggler]\");\r\n\t\tdropdownTogglers.forEach((dropdownToggler) => {\r\n\t\t\tdropdownToggler.addEventListener(\"click\", () => {\r\n\t\t\t\tif (isOverlayMenu()) {\r\n\t\t\t\t\tconst currentDropdownMenu = dropdownToggler.closest(\"[data-dropdown-menu]\");\r\n\t\t\t\t\tconst childDropdownMenu = dropdownToggler\r\n\t\t\t\t\t\t.closest(\"[data-dropdown]\")\r\n\t\t\t\t\t\t.querySelector(\"[data-dropdown-menu]\");\r\n\t\t\t\t\tconst scrollTopElements = [overlayMenuBody, childDropdownMenu, currentDropdownMenu];\r\n\t\t\t\t\tscrollTopElements.forEach((scrollTopElement) => {\r\n\t\t\t\t\t\tscrollTopElement?.scrollTo(0, 0);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n\r\n\t//Toggler Click\r\n\toverlayMenuTogglers.forEach((toggler) => {\r\n\t\ttoggler.addEventListener(\"click\", (e) => {\r\n\t\t\toverlayMenuToggleActiveState();\r\n\t\t});\r\n\t});\r\n\r\n\t//Custom Link Click\r\n\toverlayMenuCustomLinks.forEach((link) =>\r\n\t\tlink.addEventListener(\"click\", (e) => {\r\n\t\t\tconst target = document.getElementById(e.target.hash?.substring(1));\r\n\t\t\tif (isOverlayMenuActive() && target) overlayMenuToggleActiveState();\r\n\t\t})\r\n\t);\r\n\r\n\t//Escape Click\r\n\tdocument.addEventListener(\"keydown\", (e) => {\r\n\t\tif (e.key == \"Escape\" && isOverlayMenuActive()) {\r\n\t\t\toverlayMenuToggleActiveState();\r\n\t\t}\r\n\t});\r\n}\r\n","export function pdfLinks() {\r\n  const pdfLinks = document.querySelectorAll('a[href$=\".pdf\"]');\r\n  if (pdfLinks.length) {\r\n    pdfLinks.forEach((link) => {\r\n      link.setAttribute(\"target\", \"_blank\");\r\n      link.setAttribute(\"rel\", \"noopener noreferrer\");\r\n    });\r\n  }\r\n}\r\n","export function popup() {\r\n  const popupSelector = \"[data-sgd-popup]\";\r\n\r\n  class MainPopup {\r\n    static popupOpenedBy = undefined;\r\n    constructor(popup) {\r\n      this.popup = popup;\r\n      this.togglerOpenSelectors = this.popup.dataset.sgdPopupTriggerSelector;\r\n      this.togglersOpen = this.togglerOpenSelectors && this.isValidSelector(this.togglerOpenSelectors) ? document.querySelectorAll(this.togglerOpenSelectors) : [];\r\n      this.togglersClose = this.popup.querySelectorAll(\"[data-sgd-popup-toggler-close]\");\r\n      this.focusableElements = this.getFocusableElements();\r\n      this.firstFocusableElement = this.focusableElements[0];\r\n      this.lastFocusableElement = this.focusableElements[this.focusableElements.length - 1];\r\n      this.activeClass = \"active\";\r\n\r\n      const windowLocationHash = window.location.hash;\r\n      if (windowLocationHash) {\r\n        this.togglersOpen.forEach((toggler) => {\r\n          const togglerHash = toggler.hash;\r\n          if (togglerHash && togglerHash === windowLocationHash) {\r\n            this.popupShow();\r\n          }\r\n        });\r\n      }\r\n\r\n      this.togglersOpen?.forEach((togglerOpen) => {\r\n        togglerOpen.addEventListener(\"click\", (e) => {\r\n          e.preventDefault();\r\n          this.popupShow();\r\n\r\n          //define popupOpenedBy if togglerOpen is not inside popup\r\n          if (!togglerOpen.closest(popupSelector)) {\r\n            MainPopup.popupOpenedBy = togglerOpen;\r\n          }\r\n        });\r\n      });\r\n\r\n      this.togglersClose?.forEach((togglerClose) => {\r\n        togglerClose.addEventListener(\"click\", (e) => {\r\n          e.preventDefault();\r\n          this.popupClose();\r\n        });\r\n      });\r\n\r\n      document.addEventListener(\"keydown\", (e) => {\r\n        if (e.code === \"Escape\") {\r\n          this.popupClose();\r\n        }\r\n      });\r\n    }\r\n\r\n    isValidSelector(selector) {\r\n      try {\r\n        document.querySelectorAll(selector);\r\n      } catch (e) {\r\n        if (e instanceof DOMException) {\r\n          console.error(\"Not valid popup trigger selector: \" + selector);\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    isActive(popup = this.popup) {\r\n      return popup.classList.contains(this.activeClass);\r\n    }\r\n\r\n    focusTrap(parent = this.popup) {\r\n      parent.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Tab\" || event.keyCode === 9) {\r\n          if (event.shiftKey) {\r\n            // if shift key pressed for shift + tab combination\r\n            if (document.activeElement === this.firstFocusableElement) {\r\n              event.preventDefault();\r\n              this.lastFocusableElement.focus();\r\n            }\r\n          } else {\r\n            // if tab key is pressed\r\n            if (document.activeElement === this.lastFocusableElement) {\r\n              event.preventDefault();\r\n              this.firstFocusableElement.focus();\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    getFocusableElements(parent = this.popup) {\r\n      return Array.from(parent.querySelectorAll('a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])')).filter(\r\n        (el) => !el.hasAttribute(\"disabled\") && !el.getAttribute(\"aria-hidden\") && el.type !== \"hidden\"\r\n      );\r\n    }\r\n\r\n    popupShow(popup = this.popup) {\r\n      const activePopups = document.querySelectorAll(`${popupSelector}.${this.activeClass}`);\r\n      activePopups?.forEach((activePopup) => {\r\n        if (activePopup !== this.popup) {\r\n          this.popupClose(activePopup);\r\n        }\r\n      });\r\n\r\n      popup.classList.add(this.activeClass);\r\n      popup.addEventListener(\"transitionend\", (event) => {\r\n        if (event.target === popup && this.isActive()) {\r\n          this.firstFocusableElement.focus({\r\n            preventScroll: true,\r\n          });\r\n        }\r\n      });\r\n      this.focusTrap();\r\n    }\r\n\r\n    popupClose(popup = this.popup) {\r\n      if (!this.isActive(popup)) return;\r\n      popup.classList.remove(this.activeClass);\r\n      MainPopup.popupOpenedBy?.focus({\r\n        preventScroll: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  const popups = document.querySelectorAll(popupSelector);\r\n  popups.forEach((popup) => {\r\n    new MainPopup(popup);\r\n  });\r\n}\r\n","export function preload() {\r\n  if (document.readyState === \"interactive\") {\r\n    document.body.classList.remove(\"preload\");\r\n  }\r\n}\r\n","export function sectionScroll() {\r\n\t// Get all navigation links\r\n\tconst scrollIdSelector = \"data-section-scroll-section\";\r\n\tconst scrollTriggers = document.querySelectorAll(\"[data-section-scroll-trigger]\");\r\n\r\n\tif (!scrollTriggers.length) return;\r\n\t// Smooth scroll on link click + set active class on click\r\n\tscrollTriggers.forEach((trigger) => {\r\n\t\ttrigger.addEventListener(\"click\", (event) => {\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\t// Remove active class from all links and add active class to the clicked link\r\n\t\t\tscrollTriggers.forEach((s) => s.classList.remove(\"active\"));\r\n\t\t\ttrigger.classList.add(\"active\");\r\n\r\n\t\t\t// Smooth scroll to the corresponding section\r\n\t\t\tconst targetId = trigger.getAttribute(\"href\").substring(1);\r\n\t\t\tconst targetElement = document.getElementById(targetId);\r\n\t\t\tif (targetElement) {\r\n\t\t\t\ttargetElement.scrollIntoView({ behavior: \"smooth\" });\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\t// Intersection Observer to add 'active' class based on visible section\r\n\tconst options = {\r\n\t\troot: null,\r\n\t\trootMargin: \"-50% 0px\",\r\n\t\tthreshold: 0,\r\n\t};\r\n\r\n\tconst observer = new IntersectionObserver((entries) => {\r\n\t\tentries.forEach((entry) => {\r\n\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\tconst visibleSectionId = entry.target.getAttribute(\"id\");\r\n\t\t\t\tscrollTriggers.forEach((link) => {\r\n\t\t\t\t\tlink.classList.toggle(\"active\", link.getAttribute(\"href\").substring(1) === visibleSectionId);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}, options);\r\n\r\n\t// Observe all elements with data-section-scroll-section\r\n\tconst sections = document.querySelectorAll(`[${scrollIdSelector}]`);\r\n\tsections.forEach((section) => observer.observe(section));\r\n}\r\n","import { toggleVisibility, visibleClass, activeClass } from \"./helpers\";\r\n\r\nexport function tabs() {\r\n  function tabHandler(tab) {\r\n    // Do nothing if the current tab has the .active class\r\n    if (tab.classList.contains(activeClass)) {\r\n      return;\r\n    }\r\n\r\n    const tabsParent = tab.closest(\"[data-tabs]\");\r\n\r\n    // Remove active item\r\n    const activeTab = tabsParent.querySelector(\"[data-tab].\" + activeClass);\r\n    activeTab.classList.remove(activeClass);\r\n    activeTab.setAttribute(\"aria-selected\", \"false\");\r\n\r\n    // Add active item\r\n    tab.classList.add(activeClass);\r\n    tab.setAttribute(\"aria-selected\", \"true\");\r\n\r\n    // Toggle tab panels visibility\r\n    const visibleTabPanel = tabsParent.querySelector(`.${visibleClass}`);\r\n    toggleVisibility(visibleTabPanel);\r\n    const targetTabPanel = document.getElementById(tab.getAttribute(\"aria-controls\"));\r\n    toggleVisibility(targetTabPanel);\r\n\r\n    // Scroll to tab on mobile within the scrollbar\r\n    const tabList = tabsParent.querySelector(\"[data-tablist]\");\r\n    const tabListStyles = window.getComputedStyle(tabList);\r\n    const tabListStylesLeftOffset = parseInt(tabListStyles.paddingLeft);\r\n    const scrollLeft = tab.getBoundingClientRect().left - tabListStylesLeftOffset;\r\n    tabList.scrollLeft += scrollLeft;\r\n  }\r\n\r\n  const tabs = document.querySelectorAll(\"[data-tab]\");\r\n  tabs.forEach((tab) => {\r\n    tab.addEventListener(\"click\", function () {\r\n      tabHandler(tab);\r\n    });\r\n  });\r\n}\r\n","//Play background video on client side\r\nexport function videoAutoplay() {\r\n  const videoSources = document.querySelectorAll(\"source\");\r\n  if (videoSources.length) {\r\n    videoSources.forEach((source) => {\r\n      const dataSrc = source.dataset.src;\r\n      if (dataSrc) {\r\n        source.src = source.dataset.src;\r\n        source.parentElement.load();\r\n      }\r\n    });\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"../scss/style.scss\";\r\n\r\nimport { accordion } from \"./modules/accordion\";\r\nimport { tabs } from \"./modules/tabs\";\r\nimport { overlayMenu } from \"./modules/overlay-menu\";\r\nimport { animate } from \"./modules/animate\";\r\nimport { videoAutoplay } from \"./modules/video-autoplay\";\r\nimport { preload } from \"./modules/preload\";\r\nimport { pdfLinks } from \"./modules/pdf-links\";\r\nimport { dropdown } from \"./modules/dropdown\";\r\nimport { popup } from \"./modules/popup\";\r\nimport { sectionScroll } from \"./modules/section-scroll\";\r\n\r\noverlayMenu();\r\n\r\ndropdown();\r\n\r\npdfLinks();\r\n\r\npreload();\r\n\r\nanimate();\r\n\r\nvideoAutoplay();\r\n\r\naccordion();\r\n\r\ntabs();\r\n\r\npopup();\r\n\r\nsectionScroll();\r\n\r\nconst allTextOffsets = document.querySelectorAll(\".text-offset\");\r\n\r\nallTextOffsets.forEach((textOffset) => {\r\n\tconst parent = textOffset.parentNode;\r\n\r\n\tconst firstPart = document.createElement(\"span\");\r\n\tfirstPart.classList.add(\"text-offset-first-part\");\r\n\r\n\twhile (parent.firstChild && parent.firstChild !== textOffset) {\r\n\t\tfirstPart.appendChild(parent.firstChild);\r\n\t}\r\n\r\n\tparent.insertBefore(firstPart, textOffset);\r\n\r\n\tfunction wrapTextInSpan(el) {\r\n\t\tconst text = el.textContent;\r\n\t\tel.textContent = \"\";\r\n\t\tconst newSpan = document.createElement(\"span\");\r\n\t\tnewSpan.classList.add(\"text-offset-content\");\r\n\t\tnewSpan.textContent = text;\r\n\t\tel.appendChild(newSpan);\r\n\t}\r\n\r\n\twrapTextInSpan(firstPart);\r\n\twrapTextInSpan(textOffset);\r\n\r\n\tparent.classList.add(\"text-offset-active\");\r\n});\r\n"],"names":[],"sourceRoot":""}